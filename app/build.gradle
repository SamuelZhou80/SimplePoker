apply plugin: 'com.android.application'

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}
def verCode = 1

android {
    compileSdkVersion 22
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.simplepoker"
        minSdkVersion 22
        targetSdkVersion 29
        multiDexEnabled true
        versionCode verCode
        versionName APP_VERSION

        resValue("string", 'app_version', APP_VERSION)
        buildConfigField "boolean", "LEO_DEBUG", "true"
        buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
        buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"  //junit4 相关配置
        // signingConfig signingConfigs.signingConfig

        testInstrumentationRunnerArguments clearPackageData: 'true' // 执行instrumentation测试时清除缓存
    }
    buildTypes {
        release {
            buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
            buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL
            buildConfigField 'String', 'IM_SERVER_HOST', RELEASE_IM_SERVER_HOST
            buildConfigField 'int', 'IM_SERVER_PORT', RELEASE_IM_SERVER_PORT
            buildConfigField "boolean", "LEO_DEBUG", RELEASE_LEO_DEBUG
//            minifyEnabled true
//            zipAlignEnabled true
//            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
            buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL
            buildConfigField 'String', 'IM_SERVER_HOST', RELEASE_IM_SERVER_HOST
            buildConfigField 'int', 'IM_SERVER_PORT', RELEASE_IM_SERVER_PORT
            buildConfigField "boolean", "LEO_DEBUG", RELEASE_LEO_DEBUG
            testCoverageEnabled = true // 打开覆盖率统计开关
        }
    }

    //修改生成的apk名字
    applicationVariants.all { variant ->
        variant.outputs.all {
            // output ->
            // 输出apk名称为great_v1.0.apk
            def fileName = "poker_${defaultConfig.versionName}.apk"
            outputFileName = fileName
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation files('libs/litepal.jar')
    implementation files('libs/pinyin4j-2.5.0.jar')
    testImplementation 'junit:junit:4.12'

    // UiAutomator Testing
    androidTestImplementation 'org.hamcrest:hamcrest-integration:1.3'

    androidTestImplementation 'androidx.test:core:' + rootProject.coreVersion
    androidTestImplementation 'androidx.test.ext:junit:' + rootProject.extJUnitVersion
    androidTestImplementation 'androidx.test:runner:' + rootProject.runnerVersion
    androidTestImplementation 'androidx.test.espresso:espresso-core:' + rootProject.espressoVersion
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0';
}
